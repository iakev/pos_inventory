openapi: 3.0.3
info:
  title: POS Inventory API
  version: 1.0.0
  description: Documentation of API endpoints of Pos Inventory
paths:
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/business/:
    get:
      operationId: v1_business_list
      description: Returns a list of business
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Business'
          description: ''
    post:
      operationId: v1_business_create
      description: Creates a  new business
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Business'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Business'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Business'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /api/v1/business/{uuid}/:
    get:
      operationId: v1_business_retrieve
      description: Retrieves a business given its associated identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this business.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministrationNotFound'
          description: ''
    put:
      operationId: v1_business_update
      description: Updates a business given its associated identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this business.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Business'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Business'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Business'
        required: true
      security:
      - jwtAuth: []
      responses:
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministrationNotFound'
          description: ''
    patch:
      operationId: v1_business_partial_update
      description: updates a business partially given it's identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this business.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBusiness'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBusiness'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBusiness'
      security:
      - jwtAuth: []
      responses:
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministrationNotFound'
          description: ''
    delete:
      operationId: v1_business_destroy
      description: deletes an existing business
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this business.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministrationNotFound'
          description: ''
  /api/v1/business/{uuid}/list_all_owners/:
    get:
      operationId: v1_business_list_all_owners_retrieve
      description: Lists all owners of the business
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
          description: ''
  /api/v1/categories/:
    get:
      operationId: v1_categories_list
      description: Return a list of all categories
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: v1_categories_create
      description: Create a new category
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/categories/{uuid}/:
    get:
      operationId: v1_categories_retrieve
      description: Return a single category
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Category.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNotFound'
          description: ''
    put:
      operationId: v1_categories_update
      description: Update an existing category
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Category.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - jwtAuth: []
      responses:
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNotFound'
          description: ''
    patch:
      operationId: v1_categories_partial_update
      description: Update an existing category
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Category.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - jwtAuth: []
      responses:
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNotFound'
          description: ''
    delete:
      operationId: v1_categories_destroy
      description: Delete an existing category
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Category.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNotFound'
          description: ''
  /api/v1/categories/{uuid}/list_all_products/:
    get:
      operationId: v1_categories_list_all_products_list
      description: List all products in a category
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Category.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductSansSupplierResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNotFound'
          description: ''
  /api/v1/categories/search/:
    post:
      operationId: v1_categories_search_create
      description: Basic viewset for Category Related Items
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategorySearch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CategorySearch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CategorySearch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNotFound'
          description: ''
  /api/v1/customers/:
    get:
      operationId: v1_customers_list
      description: Returns a list of Customer
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
    post:
      operationId: v1_customers_create
      description: Creates a  new customer
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
  /api/v1/customers/{uuid}/:
    get:
      operationId: v1_customers_retrieve
      description: Retrieves a Customer given its associated identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Customer.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    put:
      operationId: v1_customers_update
      description: Updates a Customer given its associated identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Customer.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Customer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    patch:
      operationId: v1_customers_partial_update
      description: updates a customer partially given it's identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Customer.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomer'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
          description: ''
    delete:
      operationId: v1_customers_destroy
      description: deletes an existing Customer
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Customer.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/employees/:
    get:
      operationId: v1_employees_list
      description: Returns a list of employee
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Employee'
          description: ''
    post:
      operationId: v1_employees_create
      description: Creates a  new employee
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
  /api/v1/employees/{uuid}/:
    get:
      operationId: v1_employees_retrieve
      description: Retrieves a employee given its associated identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this employee.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    put:
      operationId: v1_employees_update
      description: Updates a Employee given its associated identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this employee.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Employee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Employee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Employee'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    patch:
      operationId: v1_employees_partial_update
      description: updates a employee partially given it's identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this employee.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployee'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Employee'
          description: ''
    delete:
      operationId: v1_employees_destroy
      description: deletes an existing Employee
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this employee.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/owners/:
    get:
      operationId: v1_owners_list
      description: Returns a lists of business owners
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OwnerResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    post:
      operationId: v1_owners_create
      description: Creates a  new owner
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Owner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Owner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Owner'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v1/owners/{uuid}/:
    get:
      operationId: v1_owners_retrieve
      description: Retrieves a owner given its associated identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this owner.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: v1_owners_update
      description: Updates a owner given its associated identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this owner.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Owner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Owner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Owner'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    patch:
      operationId: v1_owners_partial_update
      description: updates a owner partially given it's identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this owner.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOwner'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOwner'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOwner'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: v1_owners_destroy
      description: deletes an existing owner
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this owner.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdministrationNotFound'
          description: ''
  /api/v1/paymentmodes/:
    get:
      operationId: v1_paymentmodes_list
      description: Returns a list of all PaymentModes
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentModeResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    post:
      operationId: v1_paymentmodes_create
      description: Creates a  new PaymentMode
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentMode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentMode'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentModeResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v1/paymentmodes/{uuid}/:
    get:
      operationId: v1_paymentmodes_retrieve
      description: Retrieves a PaymentMode given its associated identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Payment Mode.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentModeResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: v1_paymentmodes_update
      description: Updates a PaymentMode given its associated identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Payment Mode.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentMode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentMode'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentModeResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    patch:
      operationId: v1_paymentmodes_partial_update
      description: updates a PaymentMode partially given it's identifier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Payment Mode.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMode'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMode'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPaymentMode'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentModeResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: v1_paymentmodes_destroy
      description: deletes an existing PaymentMode
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Payment Mode.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/products/:
    get:
      operationId: v1_products_list
      description: Return a list of all products
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductSansSupplierResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    post:
      operationId: v1_products_create
      description: Create a new product
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSansSupplierResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v1/products/{uuid}/:
    get:
      operationId: v1_products_retrieve
      description: Return a single product
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Product.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSansSupplierResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: v1_products_update
      description: Update an existing product
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Product.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Product'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Product'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSansSupplierResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    patch:
      operationId: v1_products_partial_update
      description: Update an existing product
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Product.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSansSupplierResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: v1_products_destroy
      description: Delete an existing product
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Product.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/products/{uuid}/list_suppliers/:
    get:
      operationId: v1_products_list_suppliers_list
      description: Retrieves a list of suppliers for a particular Product.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Product.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductListSuppliers'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNotFound'
          description: ''
  /api/v1/products/{uuid}/purchase_information/:
    get:
      operationId: v1_products_purchase_information_retrieve
      description: Retrieves Purchase Information for a particular Product.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Product.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNotFound'
          description: ''
  /api/v1/products/{uuid}/sale_information/:
    get:
      operationId: v1_products_sale_information_list
      description: Retrieves Sale Information for a particular Product.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Product.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SalesResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNotFound'
          description: ''
  /api/v1/products/{uuid}/stock_information/:
    get:
      operationId: v1_products_stock_information_retrieve
      description: Retrieves a Stock Information for a particular Product.
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Product.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductListStock'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNotFound'
          description: ''
  /api/v1/products/search/:
    post:
      operationId: v1_products_search_create
      description: Retrieves a list of Products according to query.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSearch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductSearch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductSearch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/productsales/:
    get:
      operationId: v1_productsales_list
      description: List all ProductSales.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductSalesResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    post:
      operationId: v1_productsales_create
      description: Create a new ProductSale
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSales'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductSales'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductSales'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSalesResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v1/productsales/{uuid}/:
    get:
      operationId: v1_productsales_retrieve
      description: Retun a single ProductSale
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this sale.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSalesResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: v1_productsales_update
      description: Update a ProductSale
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this product_sale.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductSaleUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProductSaleUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductSaleUpdate'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSalesResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    patch:
      operationId: v1_productsales_partial_update
      description: Update a ProductSale
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this product_sale.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProductSaleUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProductSaleUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductSaleUpdate'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSalesResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: v1_productsales_destroy
      description: Delete a ProductSale
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this ProductSale.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/purchaseproducts/:
    get:
      operationId: v1_purchaseproducts_list
      description: list all PurchaseProducts
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseProductResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    post:
      operationId: v1_purchaseproducts_create
      description: Create a new PurchaseProduct
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseProduct'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseProductResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v1/purchaseproducts/{uuid}/:
    get:
      operationId: v1_purchaseproducts_retrieve
      description: Return a single PurchaseProduct
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this PurchaseStock.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseProductResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: v1_purchaseproducts_update
      description: Update a PurchaseProduct
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this PurchaseProduct.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseProduct'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseProductResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    patch:
      operationId: v1_purchaseproducts_partial_update
      description: Update a PurchaseProduct
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this PurchaseProduct.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseProductResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: v1_purchaseproducts_destroy
      description: Delete a PurchaseProduct
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this PurchaseProduct.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/purchases/:
    get:
      operationId: v1_purchases_list
      description: list all purchases
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PurchaseResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    post:
      operationId: v1_purchases_create
      description: create a new purchase
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purchase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Purchase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Purchase'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v1/purchases/{uuid}/:
    get:
      operationId: v1_purchases_retrieve
      description: Return a single purchase
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Purchase.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: v1_purchases_update
      description: Update a Purchase
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Purchase.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Purchase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Purchase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Purchase'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    patch:
      operationId: v1_purchases_partial_update
      description: Update a Purchase
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Purchase.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchase'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPurchase'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPurchase'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: v1_purchases_destroy
      description: Delete a Purchase
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Purchase.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/sales/:
    get:
      operationId: v1_sales_list
      description: List all Sales.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SalesResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    post:
      operationId: v1_sales_create
      description: Create a new Sale
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sales'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sales'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sales'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v1/sales/{uuid}/:
    get:
      operationId: v1_sales_retrieve
      description: Retrieve a Sale indentified by uuid
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this sale.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: v1_sales_update
      description: Update a Sale
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this sale.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sales'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sales'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sales'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    patch:
      operationId: v1_sales_partial_update
      description: Update a Sale
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this sale.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSales'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSales'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSales'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SalesResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: v1_sales_destroy
      description: Delete a Sale
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this sale.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/sales/{uuid}/break_down_denomination/:
    post:
      operationId: v1_sales_break_down_denomination_create
      description: Breakdown denomination when there is no change available
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this sale.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Sales'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Sales'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Sales'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sales'
          description: ''
  /api/v1/sales/{uuid}/generate_receipt/:
    post:
      operationId: v1_sales_generate_receipt_create
      description: |-
        Complete a Sale by adding the requisite data, setting status and
        and amount_paid and generating a receipt/receipt_data
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this sale.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateSaleReceipt'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenerateSaleReceipt'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerateSaleReceipt'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sales'
          description: ''
  /api/v1/sales/{uuid}/get_products_information/:
    post:
      operationId: v1_sales_get_products_information_create
      description: |-
        Get all products and product_sale_info related
        to a speciic sale
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this sale.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductSalesResponse'
          description: ''
  /api/v1/sales/generate_sales_report/:
    post:
      operationId: v1_sales_generate_sales_report_create
      description: Generate sales report based on date given
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateSalesReport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenerateSalesReport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerateSalesReport'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Sales'
          description: ''
  /api/v1/stockmovement/:
    get:
      operationId: v1_stockmovement_list
      description: List all StockMovements
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockMovementResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    post:
      operationId: v1_stockmovement_create
      description: Create a new StockMovement
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockMovement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockMovement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockMovement'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockMovementResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v1/stockmovement/{uuid}/:
    get:
      operationId: v1_stockmovement_retrieve
      description: Retun a single StockMovement
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this StockMovement
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockMovementResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: v1_stockmovement_update
      description: Update a StockMovement
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this StockMovement.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockMovement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockMovement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockMovement'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockMovementResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    patch:
      operationId: v1_stockmovement_partial_update
      description: Update a StockMovement
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this StockMovement.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStockMovement'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStockMovement'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStockMovement'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockMovementResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: v1_stockmovement_destroy
      description: Delete a StockMovement
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this StockMovement.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/stocks/:
    get:
      operationId: v1_stocks_list
      description: Return a list of all stock
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    post:
      operationId: v1_stocks_create
      description: Create a new stock
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v1/stocks/{uuid}/:
    get:
      operationId: v1_stocks_retrieve
      description: Return a single stock
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Stock item.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: v1_stocks_update
      description: Update an existing stock
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Stock item.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Stock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Stock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Stock'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    patch:
      operationId: v1_stocks_partial_update
      description: Update an existing stock
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Stock item.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStock'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStock'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStock'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StockResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: v1_stocks_destroy
      description: Delete an existing stock
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Stock item.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/stocks/{uuid}/list_all_stock_movements/:
    get:
      operationId: v1_stocks_list_all_stock_movements_list
      description: Returns a list of all stock movements associated with a particular
        stock
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Stock item.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockMovementAvecProductResponse'
          description: ''
  /api/v1/stocks/generate_stock_movement_report/:
    post:
      operationId: v1_stocks_generate_stock_movement_report_create
      description: Generate stock movement report for a given date range
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateStockMovementReport'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenerateStockMovementReport'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenerateStockMovementReport'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stock'
          description: ''
  /api/v1/stocks/search/:
    post:
      operationId: v1_stocks_search_create
      description: Retrieves a list of Products according to query.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StockSearch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StockSearch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StockSearch'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockResponse'
          description: ''
  /api/v1/supplierproducts/:
    get:
      operationId: v1_supplierproducts_list
      description: List all supplier products
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplierProductResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    post:
      operationId: v1_supplierproducts_create
      description: Create a new SupplierProduct
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplierProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplierProduct'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierProductResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v1/supplierproducts/{uuid}/:
    get:
      operationId: v1_supplierproducts_retrieve
      description: Retun a single SupplierProduct
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this SupplierProduct.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierProductResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: v1_supplierproducts_update
      description: Update a SupplierProduct
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this SupplierProduct.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SupplierProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SupplierProduct'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierProductResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    patch:
      operationId: v1_supplierproducts_partial_update
      description: Update a SupplierProduct
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this SupplierProduct.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplierProduct'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplierProduct'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplierProduct'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierProductResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: v1_supplierproducts_destroy
      description: Delete a SupplierProduct
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this SupplierProduct.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/suppliers/:
    get:
      operationId: v1_suppliers_list
      description: Return a list of all suppliers
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SupplierResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    post:
      operationId: v1_suppliers_create
      description: Create a new supplier
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v1/suppliers/{uuid}/:
    get:
      operationId: v1_suppliers_retrieve
      description: Return a single supplier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Supplier.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: v1_suppliers_update
      description: Update an existing supplier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Supplier.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Supplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Supplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Supplier'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    patch:
      operationId: v1_suppliers_partial_update
      description: Update an existing supplier partially
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Supplier.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSupplier'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: v1_suppliers_destroy
      description: Delete an existing supplier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Supplier.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/suppliers/{uuid}/list_all_products/:
    get:
      operationId: v1_suppliers_list_all_products_retrieve
      description: List all Products associated with a Supplier
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A unique identifier identifying this Supplier.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierListAllProducts'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductNotFound'
          description: ''
  /api/v1/users/:
    get:
      operationId: v1_users_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserResponseList'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    post:
      operationId: v1_users_create
      description: Create and register a user and create jwt tokens
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: v1_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    put:
      operationId: v1_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    patch:
      operationId: v1_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: ''
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
          description: ''
    delete:
      operationId: v1_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/users/get_token_associated_user/:
    get:
      operationId: v1_users_get_token_associated_user_retrieve
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/login/:
    post:
      operationId: v1_users_login_create
      description: Login a user and generate jwt tokens
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/logout/:
    post:
      operationId: v1_users_logout_create
      description: Logging user out
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/refresh_token/:
    post:
      operationId: v1_users_refresh_token_create
      description: Custom view to refresh access_token
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/users/verify_token/:
    post:
      operationId: v1_users_verify_token_create
      description: Custom view to verify access_token
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    AdministrationNotFound:
      type: object
      properties:
        detail:
          type: string
          default: Unfortunately requested resource not found
    BlankEnum:
      enum:
      - ''
    Business:
      type: object
      description: Serializer for Business model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        tax_pin:
          type: string
          maxLength: 255
        phone_number:
          type: string
          nullable: true
          maxLength: 255
        email_address:
          type: string
          nullable: true
          maxLength: 255
      required:
      - address
      - created_at
      - name
      - tax_pin
      - updated_at
      - uuid
    Category:
      type: object
      description: Serializer for Category model
      properties:
        name:
          type: string
          maxLength: 255
        uuid:
          type: string
          format: uuid
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - name
      - updated_at
      - uuid
    CategoryResponse:
      type: object
      description: Serializer for Response of the Category
      properties:
        name:
          type: string
          maxLength: 255
        thumbnail:
          type: string
          format: uri
          nullable: true
      required:
      - name
    CategorySearch:
      type: object
      description: Custom serializer for search request query
      properties:
        query:
          type: string
      required:
      - query
    Customer:
      type: object
      description: Serializer for Customer model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
        address:
          type: string
          nullable: true
          maxLength: 255
        tax_pin:
          type: string
          nullable: true
          maxLength: 255
        email_address:
          type: string
          nullable: true
          maxLength: 255
      required:
      - created_at
      - updated_at
      - uuid
    CustomerSerializerAvecnameSole:
      type: object
      description: Serializer that just lists names only
      properties:
        name:
          type: string
          nullable: true
          maxLength: 255
    Employee:
      type: object
      description: Serializer for Employee model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        phone_number:
          type: string
          maxLength: 255
        address:
          type: string
          nullable: true
          maxLength: 255
        department:
          type: string
          nullable: true
          maxLength: 255
      required:
      - created_at
      - phone_number
      - updated_at
      - uuid
    EmployeeRestricted:
      type: object
      description: Custom serializer for employee serializer Response in ather viewsets
      properties:
        user:
          $ref: '#/components/schemas/UserResponse'
        department:
          type: string
          nullable: true
          maxLength: 255
      required:
      - user
    EmployeeSerializerAvecNameSole:
      type: object
      description: Serializer for Employee using the first and last names of user
        only
      properties:
        user:
          $ref: '#/components/schemas/UserResponseSerializerAvecNameSole'
      required:
      - user
    GenerateSaleReceipt:
      type: object
      description: Serializer for request data to generate receipt and complete sale
      properties:
        payment_mode:
          type: string
        amount_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
      required:
      - amount_paid
      - payment_mode
    GenerateSalesReport:
      type: object
      description: Serializer for request data to generate sales summary report given
        start and end_date
      properties:
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
      required:
      - end_date
      - start_date
    GenerateStockMovementReport:
      type: object
      description: |-
        Serializer for request data to generate Stock Movement of a particular stock
        summary report given start and end_date
      properties:
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
      required:
      - end_date
      - start_date
    NotFound:
      type: object
      properties:
        detail:
          type: string
          default: Unfortunately requested resource not found
    NullEnum:
      enum:
      - null
    Owner:
      type: object
      description: Serializer for the owner model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        business_uuid:
          type: string
          format: uuid
        user_uuid:
          type: string
          format: uuid
      required:
      - business_uuid
      - user_uuid
      - uuid
    OwnerResponse:
      type: object
      description: Custom Response data serializer for owner
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        user:
          $ref: '#/components/schemas/UserResponse'
        business:
          $ref: '#/components/schemas/Business'
      required:
      - user
      - uuid
    PaginatedUserResponseList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
    PatchedBusiness:
      type: object
      description: Serializer for Business model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        tax_pin:
          type: string
          maxLength: 255
        phone_number:
          type: string
          nullable: true
          maxLength: 255
        email_address:
          type: string
          nullable: true
          maxLength: 255
    PatchedCategory:
      type: object
      description: Serializer for Category model
      properties:
        name:
          type: string
          maxLength: 255
        uuid:
          type: string
          format: uuid
          readOnly: true
        image:
          type: string
          format: uri
          nullable: true
        thumbnail:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedCustomer:
      type: object
      description: Serializer for Customer model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
        address:
          type: string
          nullable: true
          maxLength: 255
        tax_pin:
          type: string
          nullable: true
          maxLength: 255
        email_address:
          type: string
          nullable: true
          maxLength: 255
    PatchedEmployee:
      type: object
      description: Serializer for Employee model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          $ref: '#/components/schemas/User'
        phone_number:
          type: string
          maxLength: 255
        address:
          type: string
          nullable: true
          maxLength: 255
        department:
          type: string
          nullable: true
          maxLength: 255
    PatchedOwner:
      type: object
      description: Serializer for the owner model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        business_uuid:
          type: string
          format: uuid
        user_uuid:
          type: string
          format: uuid
    PatchedPaymentMode:
      type: object
      description: Serializer for PaymentMode model Request
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        properties:
          type: object
          additionalProperties: {}
    PatchedProduct:
      type: object
      description: Serializer for Product model Request data
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        category:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/SupplierRelatedResponse'
          readOnly: true
        code:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        product_type:
          type: string
        tax_type:
          type: string
        unit:
          type: string
        limited:
          type: boolean
          nullable: true
        active_for_sale:
          type: boolean
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        packaging_unit:
          type: string
    PatchedProductSaleUpdate:
      type: object
      description: Serializer tailor made for updating (partial or whole) of a ProductSale
      properties:
        quantity_sold:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_wholesale:
          type: boolean
    PatchedPurchase:
      type: object
      description: Serializer for Request Purchase
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        employee_uuid:
          type: string
          format: uuid
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        purchase_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
    PatchedPurchaseProduct:
      type: object
      description: Serializer for Request PurchaseStock ViewSet
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        product_uuid:
          type: string
          format: uuid
        purchase_uuid:
          type: string
          format: uuid
        supplier_uuid:
          type: string
          format: uuid
        product_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        purchase_unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_product_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        discount_applied:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
    PatchedSales:
      type: object
      description: Serializer for Sales model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        customer_uuid:
          type: string
          format: uuid
        business_uuid:
          type: string
          format: uuid
        payment_uuid:
          type: string
          format: uuid
        employee_uuid:
          type: string
          format: uuid
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
        sale_amount_with_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tax_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        receipt_type:
          $ref: '#/components/schemas/ReceiptTypeEnum'
        transaction_type:
          $ref: '#/components/schemas/TransactionTypeEnum'
        receipt_label:
          type: string
          maxLength: 5
        sale_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SaleStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedStock:
      type: object
      description: Serializer for Stock model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        product_uuid:
          type: string
          format: uuid
        stock_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        cost_per_unit:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        price_per_unit_retail:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        price_per_unit_wholesale:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        reorder_level:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        reorder_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        latest_stock_movement_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/StocKInOutEnum'
          - $ref: '#/components/schemas/NullEnum'
        latest_stock_movement_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        latest_stock_movement_remarks:
          type: string
          nullable: true
    PatchedStockMovement:
      type: object
      description: Serializer for StockMovement Request data
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        stock_uuid:
          type: string
          format: uuid
        movement_type:
          $ref: '#/components/schemas/StocKInOutEnum'
        movement_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        remarks:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        previous_stock_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: The stock quantity before the stock movement
        employee_uuid:
          type: string
          format: uuid
    PatchedSupplier:
      type: object
      description: Serializer for Request Supplier model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
        name:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        email_address:
          type: string
          nullable: true
          maxLength: 255
        phone_number:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedSupplierProduct:
      type: object
      description: Serializer for Request data for the SupplierProduct Object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        supplier_uuid:
          type: string
          format: uuid
        product_uuid:
          type: string
          format: uuid
        lead_time:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
    PatchedUser:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
          title: Firts Name of User
          maxLength: 255
        last_name:
          type: string
          title: Last Name of User
          maxLength: 255
    PaymentMethodEnum:
      enum:
      - '01'
      - '02'
      - '03'
      - '04'
      - '05'
      - '06'
      - '07'
      type: string
      description: |-
        * `01` - CASH
        * `02` - CREDIT
        * `03` - CASH/CREDIT
        * `04` - BANK CHECK
        * `05` - DEBIT AND CREDIT CARD
        * `06` - MOBILE MONEY
        * `07` - OTHER
    PaymentMode:
      type: object
      description: Serializer for PaymentMode model Request
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        payment_method:
          $ref: '#/components/schemas/PaymentMethodEnum'
        properties:
          type: object
          additionalProperties: {}
      required:
      - uuid
    PaymentModeResponse:
      type: object
      description: Payment Mode Response serializer
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        payment_method:
          type: string
          readOnly: true
      required:
      - payment_method
      - uuid
    Product:
      type: object
      description: Serializer for Product model Request data
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        category:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/SupplierRelatedResponse'
          readOnly: true
        code:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        product_type:
          type: string
        tax_type:
          type: string
        unit:
          type: string
        limited:
          type: boolean
          nullable: true
        active_for_sale:
          type: boolean
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        packaging_unit:
          type: string
      required:
      - category
      - code
      - created_at
      - name
      - suppliers
      - updated_at
      - uuid
    ProductListStock:
      type: object
      description: |-
        Serializer to be used to list Stock associated with
        a product
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        stock_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        cost_per_unit:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        price_per_unit_retail:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        price_per_unit_wholesale:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        reorder_level:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        reorder_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        latest_stock_movement_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/StocKInOutEnum'
          - $ref: '#/components/schemas/NullEnum'
        latest_stock_movement_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        latest_stock_movement_remarks:
          type: string
          nullable: true
        product_name:
          type: string
          description: Get name of stock product object
          readOnly: true
        product_code:
          type: string
          description: Get code of stock product object
          readOnly: true
      required:
      - created_at
      - product_code
      - product_name
      - updated_at
      - uuid
    ProductListSuppliers:
      type: object
      description: Custom serializer to include leadtime
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        address:
          type: string
        email_address:
          type: string
          format: email
        phone_number:
          type: string
        lead_time:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      required:
      - address
      - email_address
      - lead_time
      - name
      - phone_number
      - uuid
    ProductNotFound:
      type: object
      properties:
        detail:
          type: string
          default: Unfortunately requested resource not found
    ProductResponse:
      type: object
      description: Product Serializer for Response data
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        category:
          $ref: '#/components/schemas/Category'
        name:
          type: string
          maxLength: 255
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/SupplierRelatedResponse'
          readOnly: true
        code:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        product_type:
          type: string
          readOnly: true
        tax_type:
          type: string
          readOnly: true
        unit:
          type: string
          readOnly: true
        limited:
          type: boolean
          nullable: true
        active_for_sale:
          type: boolean
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        packaging_unit:
          type: string
          readOnly: true
      required:
      - category
      - code
      - created_at
      - name
      - packaging_unit
      - product_type
      - suppliers
      - tax_type
      - unit
      - updated_at
      - uuid
    ProductSaleUpdate:
      type: object
      description: Serializer tailor made for updating (partial or whole) of a ProductSale
      properties:
        quantity_sold:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_wholesale:
          type: boolean
      required:
      - is_wholesale
      - quantity_sold
    ProductSales:
      type: object
      description: Serializer for Request ProductSales model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        product_uuid:
          type: string
          format: uuid
        sale_uuid:
          type: string
          format: uuid
        quantity_sold:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        price_per_unit:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_wholesale:
          type: boolean
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tax_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tax_rate:
          type: string
          maxLength: 5
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - product_uuid
      - sale_uuid
      - updated_at
      - uuid
    ProductSalesResponse:
      type: object
      description: Serializer for Response ProductSales model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductSansSupplierResponse'
          readOnly: true
        sale:
          allOf:
          - $ref: '#/components/schemas/SalesRelatedResponseSale'
          readOnly: true
        quantity_sold:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        price_per_unit:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        is_wholesale:
          type: boolean
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tax_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tax_rate:
          type: string
          maxLength: 5
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - product
      - sale
      - updated_at
      - uuid
    ProductSansSupplierResponse:
      type: object
      description: |-
        Product Serializer for Response data without supplier data to
        be embedded in other serializers
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryResponse'
        name:
          type: string
          maxLength: 255
        code:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        product_type:
          type: string
          readOnly: true
        tax_type:
          type: string
          readOnly: true
        unit:
          type: string
          readOnly: true
        limited:
          type: boolean
          nullable: true
        active_for_sale:
          type: boolean
          nullable: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        packaging_unit:
          type: string
          readOnly: true
      required:
      - category
      - code
      - created_at
      - name
      - packaging_unit
      - product_type
      - tax_type
      - unit
      - updated_at
      - uuid
    ProductSearch:
      type: object
      description: Custom serializer for search request query
      properties:
        query:
          type: string
      required:
      - query
    ProductSerializerAvecNameSole:
      type: object
      description: |-
        Custom Serializer that just contains a product name only
        for nesting purposes
      properties:
        name:
          type: string
          maxLength: 255
      required:
      - name
    Purchase:
      type: object
      description: Serializer for Request Purchase
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        employee_uuid:
          type: string
          format: uuid
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        purchase_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
      required:
      - created_at
      - employee_uuid
      - products
      - updated_at
      - uuid
    PurchaseProduct:
      type: object
      description: Serializer for Request PurchaseStock ViewSet
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        product_uuid:
          type: string
          format: uuid
        purchase_uuid:
          type: string
          format: uuid
        supplier_uuid:
          type: string
          format: uuid
        product_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        purchase_unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_product_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        discount_applied:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
      required:
      - created_at
      - product_uuid
      - purchase_uuid
      - supplier_uuid
      - updated_at
      - uuid
    PurchaseProductResponse:
      type: object
      description: This is Response Serailizer for PurchaseProduct ViewSet
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductSansSupplierResponse'
          readOnly: true
        purchase:
          allOf:
          - $ref: '#/components/schemas/PurchaseRelatedResponse'
          readOnly: true
        supplier:
          allOf:
          - $ref: '#/components/schemas/SupplierRelatedResponse'
          readOnly: true
        product_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        purchase_unit_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        total_product_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        discount_applied:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
      required:
      - created_at
      - product
      - purchase
      - supplier
      - updated_at
      - uuid
    PurchaseRelatedResponse:
      type: object
      description: Serializer for without products Response for PurchaseProduct Viewset
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        employee:
          allOf:
          - $ref: '#/components/schemas/EmployeeRestricted'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        purchase_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
      required:
      - created_at
      - employee
      - updated_at
      - uuid
    PurchaseResponse:
      type: object
      description: Serializer for Response Purchase
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        employee:
          allOf:
          - $ref: '#/components/schemas/EmployeeRestricted'
          readOnly: true
        purchase_products:
          type: array
          items: {}
          description: Get all purchase_products to highlight in purchases Response
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        purchase_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        description:
          type: string
          nullable: true
      required:
      - created_at
      - employee
      - purchase_products
      - updated_at
      - uuid
    ReceiptTypeEnum:
      enum:
      - S
      - C
      type: string
      description: |-
        * `S` - Sale
        * `C` - Credit Note
    SaleStatusEnum:
      enum:
      - '01'
      - '02'
      - '03'
      - '04'
      - '05'
      - '06'
      type: string
      description: |-
        * `01` - Wait for Approval
        * `02` - Approved
        * `03` - Credit Note Requested
        * `04` - Cancelled
        * `05` - Credit Note Generated
        * `06` - Transferred
    Sales:
      type: object
      description: Serializer for Sales model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        customer_uuid:
          type: string
          format: uuid
        business_uuid:
          type: string
          format: uuid
        payment_uuid:
          type: string
          format: uuid
        employee_uuid:
          type: string
          format: uuid
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
        sale_amount_with_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tax_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        receipt_type:
          $ref: '#/components/schemas/ReceiptTypeEnum'
        transaction_type:
          $ref: '#/components/schemas/TransactionTypeEnum'
        receipt_label:
          type: string
          maxLength: 5
        sale_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SaleStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - business_uuid
      - created_at
      - customer_uuid
      - employee_uuid
      - payment_uuid
      - products
      - updated_at
      - uuid
    SalesRelatedResponseSale:
      type: object
      description: Serializer for related Sale model within ProductSales
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        sale_status:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/SaleStatusEnum'
          - $ref: '#/components/schemas/BlankEnum'
          - $ref: '#/components/schemas/NullEnum'
      required:
      - created_at
      - updated_at
      - uuid
    SalesResponse:
      type: object
      description: Serializer for Sales model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        customer:
          allOf:
          - $ref: '#/components/schemas/CustomerSerializerAvecnameSole'
          readOnly: true
        payment:
          allOf:
          - $ref: '#/components/schemas/PaymentModeResponse'
          readOnly: true
        employee:
          $ref: '#/components/schemas/EmployeeSerializerAvecNameSole'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
        sale_amount_with_tax:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        tax_amount:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        receipt_type:
          type: string
          readOnly: true
        transaction_type:
          type: string
          readOnly: true
        receipt_label:
          type: string
          maxLength: 5
        sale_status:
          type: string
          readOnly: true
        amount_paid:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        change:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - customer
      - employee
      - payment
      - products
      - receipt_type
      - sale_status
      - transaction_type
      - updated_at
      - uuid
    StocKInOutEnum:
      enum:
      - '01'
      - '02'
      - '03'
      - '04'
      - '05'
      - '06'
      - '11'
      - '12'
      - '13'
      - '14'
      - '15'
      - '16'
      type: string
      description: |-
        * `01` - Incoming-Import
        * `02` - Incoming-Purchase
        * `03` - Incoming-Return
        * `04` - Incoming-Stock Movement
        * `05` - Incoming-Processing
        * `06` - Incoming-Adjustment
        * `11` - Outgoing-Sale
        * `12` - Outgoing-Return
        * `13` - Outgoing-Stock Movement
        * `14` - Outgoing-Processing
        * `15` - outgoing-Discarding
        * `16` - outgoing-Adjustment
    Stock:
      type: object
      description: Serializer for Stock model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        product_uuid:
          type: string
          format: uuid
        stock_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        cost_per_unit:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        price_per_unit_retail:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        price_per_unit_wholesale:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        reorder_level:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        reorder_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        latest_stock_movement_type:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/StocKInOutEnum'
          - $ref: '#/components/schemas/NullEnum'
        latest_stock_movement_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        latest_stock_movement_remarks:
          type: string
          nullable: true
      required:
      - created_at
      - product_uuid
      - updated_at
      - uuid
    StockMovement:
      type: object
      description: Serializer for StockMovement Request data
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        stock_uuid:
          type: string
          format: uuid
        movement_type:
          $ref: '#/components/schemas/StocKInOutEnum'
        movement_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        remarks:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        previous_stock_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: The stock quantity before the stock movement
        employee_uuid:
          type: string
          format: uuid
      required:
      - created_at
      - employee_uuid
      - movement_quantity
      - movement_type
      - remarks
      - stock_uuid
      - uuid
    StockMovementAvecProductResponse:
      type: object
      description: |-
        Custom Serializer for StockMovement Response data in generate
        list_all_stock_movements in Stocks ViewSet
      properties:
        product:
          $ref: '#/components/schemas/ProductSerializerAvecNameSole'
        stock_movement:
          $ref: '#/components/schemas/StockMovementSansStockResponse'
      required:
      - product
      - stock_movement
    StockMovementResponse:
      type: object
      description: Serialier for StockMovement Response data
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        stock:
          allOf:
          - $ref: '#/components/schemas/StockResponse'
          readOnly: true
        movement_type:
          type: string
          readOnly: true
        movement_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        remarks:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        previous_stock_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: The stock quantity before the stock movement
        employee:
          $ref: '#/components/schemas/EmployeeRestricted'
      required:
      - created_at
      - employee
      - movement_quantity
      - movement_type
      - remarks
      - stock
      - uuid
    StockMovementSansStockResponse:
      type: object
      description: Serialier for StockMovement Response data
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        movement_type:
          type: string
          readOnly: true
        movement_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        remarks:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        previous_stock_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          description: The stock quantity before the stock movement
        employee:
          type: integer
          nullable: true
      required:
      - created_at
      - movement_quantity
      - movement_type
      - remarks
      - uuid
    StockResponse:
      type: object
      description: Serializer for stock object Response
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductResponse'
          readOnly: true
        stock_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        cost_per_unit:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        price_per_unit_retail:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        price_per_unit_wholesale:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        reorder_level:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        reorder_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        latest_stock_movement_type:
          type: string
          readOnly: true
        latest_stock_movement_quantity:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
          nullable: true
        latest_stock_movement_remarks:
          type: string
          nullable: true
      required:
      - created_at
      - latest_stock_movement_type
      - product
      - updated_at
      - uuid
    StockSearch:
      type: object
      description: Custom serializer for search request query
      properties:
        query:
          type: string
      required:
      - query
    Supplier:
      type: object
      description: Serializer for Request Supplier model
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          readOnly: true
        name:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        email_address:
          type: string
          nullable: true
          maxLength: 255
        phone_number:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - created_at
      - name
      - phone_number
      - products
      - updated_at
      - uuid
    SupplierListAllProducts:
      type: object
      description: Serializer to list all products associated with a supplier
      properties:
        category:
          type: string
        name:
          type: string
        uuid:
          type: string
          format: uuid
        code:
          type: string
        description:
          type: string
        product_type:
          type: string
        tax_type:
          type: string
        packaging_unit:
          type: string
        unit:
          type: string
        limited:
          type: boolean
        active_for_sale:
          type: boolean
      required:
      - active_for_sale
      - category
      - code
      - description
      - limited
      - name
      - packaging_unit
      - product_type
      - tax_type
      - unit
      - uuid
    SupplierProduct:
      type: object
      description: Serializer for Request data for the SupplierProduct Object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        supplier_uuid:
          type: string
          format: uuid
        product_uuid:
          type: string
          format: uuid
        lead_time:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      required:
      - lead_time
      - product_uuid
      - supplier_uuid
      - uuid
    SupplierProductResponse:
      type: object
      description: Supplier for Response Object of SupplierProduct Objects
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        supplier:
          allOf:
          - $ref: '#/components/schemas/SupplierRelatedResponse'
          readOnly: true
        product:
          allOf:
          - $ref: '#/components/schemas/ProductSansSupplierResponse'
          readOnly: true
        lead_time:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      required:
      - lead_time
      - product
      - supplier
      - uuid
    SupplierRelatedResponse:
      type: object
      description: Serializer for Supplier response embedded in other serializers
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        email_address:
          type: string
          nullable: true
          maxLength: 255
        phone_number:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - created_at
      - name
      - phone_number
      - updated_at
      - uuid
    SupplierResponse:
      type: object
      description: Serializer for Response Supplier Object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 255
        address:
          type: string
          maxLength: 255
        email_address:
          type: string
          nullable: true
          maxLength: 255
        phone_number:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - created_at
      - name
      - phone_number
      - updated_at
      - uuid
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TransactionTypeEnum:
      enum:
      - C
      - N
      - P
      - T
      type: string
      description: |-
        * `C` - Copy
        * `N` - Normal
        * `P` - Proforma
        * `T` - Training
    User:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
        first_name:
          type: string
          title: Firts Name of User
          maxLength: 255
        last_name:
          type: string
          title: Last Name of User
          maxLength: 255
      required:
      - password
      - username
      - uuid
    UserResponse:
      type: object
      description: Response Serializer for User data
      properties:
        uuid:
          type: string
          format: uuid
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          title: Firts Name of User
          maxLength: 255
        last_name:
          type: string
          title: Last Name of User
          maxLength: 255
      required:
      - username
      - uuid
    UserResponseSerializerAvecNameSole:
      type: object
      description: Response Serializer for user data with only first_name and last_name
      properties:
        first_name:
          type: string
          title: Firts Name of User
          maxLength: 255
        last_name:
          type: string
          title: Last Name of User
          maxLength: 255
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
